version: "3.3"

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    logging:
      driver: none
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-persistence:/bitnami/zookeeper

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    logging:
      driver: none
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - kafka-persistence:/bitnami/kafka
    depends_on:
      - zookeeper

  replica_1:
    container_name: replica_1
    build:
      context: .
    depends_on:
      - kafka
    links:
      - "kafka:kafka"
    environment:
      CONTAINER_NAME: replica_1

  replica_2:
    container_name: replica_2
    build:
      context: .
    depends_on:
      - kafka
    links:
      - "kafka:kafka"
    environment:
      CONTAINER_NAME: replica_2

  replica_3:
    container_name: replica_3
    build:
      context: .
    depends_on:
      - kafka
    links:
      - "kafka:kafka"
    environment:
      CONTAINER_NAME: replica_3

  replica_4:
    container_name: replica_4
    build:
      context: .
    depends_on:
      - kafka
    links:
      - "kafka:kafka"
    environment:
      CONTAINER_NAME: replica_4
volumes:
  kafka-persistence:
  zookeeper-persistence: